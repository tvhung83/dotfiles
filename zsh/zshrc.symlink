# Start configuration added by Zim install {{{
#
# User configuration sourced by interactive shells
#

# -----------------
# Zsh configuration
# -----------------

#
# History
#

# Remove older command from the history if a duplicate is to be added.
setopt HIST_IGNORE_ALL_DUPS

#
# Input/output
#

# Set editor default keymap to emacs (`-e`) or vi (`-v`)
bindkey -e

# Prompt for spelling correction of commands.
#setopt CORRECT

# Customize spelling correction prompt.
#SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '

# Remove path separator from WORDCHARS.
WORDCHARS=${WORDCHARS//[\/]}


# --------------------
# Module configuration
# --------------------

#
# completion
#

# Set a custom path for the completion dump file.
# If none is provided, the default ${ZDOTDIR:-${HOME}}/.zcompdump is used.
#zstyle ':zim:completion' dumpfile "${ZDOTDIR:-${HOME}}/.zcompdump-${ZSH_VERSION}"

#
# git
#

# Set a custom prefix for the generated aliases. The default prefix is 'G'.
zstyle ':zim:git' aliases-prefix 'g'

#
# input
#

# Append `../` to your input for each `.` you type after an initial `..`
#zstyle ':zim:input' double-dot-expand yes

#
# termtitle
#

# Set a custom terminal title format using prompt expansion escape sequences.
# See http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html#Simple-Prompt-Escapes
# If none is provided, the default '%n@%m: %~' is used.
#zstyle ':zim:termtitle' format '%1~'

#
# zsh-autosuggestions
#

# Customize the style that the suggestions are shown with.
# See https://github.com/zsh-users/zsh-autosuggestions/blob/master/README.md#suggestion-highlight-style
#ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=10'

#
# zsh-syntax-highlighting
#

# Set what highlighters will be used.
# See https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters.md
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

# Customize the main highlighter styles.
# See https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters/main.md#how-to-tweak-it
#typeset -A ZSH_HIGHLIGHT_STYLES
#ZSH_HIGHLIGHT_STYLES[comment]='fg=10'

# ------------------
# Initialize modules
# ------------------

if [[ ${ZIM_HOME}/init.zsh -ot ${ZDOTDIR:-${HOME}}/.zimrc ]]; then
  # Update static initialization script if it's outdated, before sourcing it
  source ${ZIM_HOME}/zimfw.zsh init -q
fi
source ${ZIM_HOME}/init.zsh

# ------------------------------
# Post-init module configuration
# ------------------------------

#
# zsh-history-substring-search
#

# Bind ^[[A/^[[B manually so up/down works both before and after zle-line-init
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# Bind up and down keys
zmodload -F zsh/terminfo +p:terminfo
if [[ -n ${terminfo[kcuu1]} && -n ${terminfo[kcud1]} ]]; then
  bindkey ${terminfo[kcuu1]} history-substring-search-up
  bindkey ${terminfo[kcud1]} history-substring-search-down
fi

bindkey '^P' history-substring-search-up
bindkey '^N' history-substring-search-down
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down
# }}} End configuration added by Zim install

fpath=($ZSH/functions $fpath)

autoload -U $ZSH/functions/*(:t)
# autoload edit-command-line; zle -N edit-command-line
# bindkey -M vicmd v edit-command-line

HISTFILE=~/Documents/.zsh_history
HISTSIZE=10000
SAVEHIST=10000

setopt HIST_VERIFY
setopt EXTENDED_HISTORY # add timestamps to history
setopt PROMPT_SUBST
setopt CORRECT
setopt COMPLETE_IN_WORD

setopt APPEND_HISTORY # adds history
setopt INC_APPEND_HISTORY SHARE_HISTORY  # adds history incrementally and share it across sessions
setopt HIST_IGNORE_ALL_DUPS  # don't record dupes in history
setopt HIST_REDUCE_BLANKS
bindkey -v

# GRC colorizes nifty unix tools all over the place
# It's conflicting with ZSH Auto Suggestion and make keyboard slow
if (( $+commands[grc] )) && (( $+commands[brew] ))
then
  source `brew --prefix`/etc/grc.zsh
fi
# Pipe my public key to my clipboard.
alias pubkey="more ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'"

# Aliases
# grc overides for ls
#   Made possible through contributions from generous benefactors like
#   `brew install coreutils`
if $(gls &>/dev/null)
then
  alias ls="gls -F --color"
  alias l="gls -lAh --color"
  alias ll="gls -l --color"
  alias la='gls -A --color'
fi

# shell
alias reload!='. $HOME/.zshrc $HOME/.zshenv'
alias vi=$EDITOR
alias ev='$EDITOR $HOME/.vimrc'
# alias et='$EDITOR $HOME/.tmux.conf'
alias ez='$EDITOR $HOME/.zshrc'
alias ee='$EDITOR $HOME/.zshenv'

# system
alias top="sudo htop"
alias help='tldr'
alias du="ncdu --color dark -rr -x --exclude .git --exclude node_modules"
alias ping='prettyping --nolegend'
alias cat='bat'

# utility
alias dl='diskutil list'
alias um='diskutil unmount'
alias efi='sudo diskutil mount EFI'
alias efi1='sudo diskutil mount /dev/disk1s1'
alias efi2='sudo diskutil mount /dev/disk2s1'
alias efi3='sudo diskutil mount /dev/disk3s1'
alias j2y='pbpaste | json2yaml | pbcopy'
alias y2j='pbpaste | yaml2json | pbcopy'
# alias mysql='mysql --pager="grcat ~/.mysql.grc | less -RSFX" "$@"'
alias em='emacsclient'
alias bi='bundle install'
alias py='python'
alias view="fzf --preview 'bat --color \"always\" {}'"

# extra
alias tun='ssh udoo -L 3306:localhost:3306 -f sleep 60'

alias urldecode='python -c "import sys, urllib as ul; \
    print ul.unquote_plus(sys.argv[1])"'

alias urlencode='python -c "import sys, urllib as ul; \
    print ul.quote_plus(sys.argv[1])"'

alias byte="gnumfmt --to=iec-i --suffix=B --padding=7"
alias h='function hdi(){ howdoi $* -c -n 3; }; hdi'

# git
# Use `hub` as our git wrapper:
#   http://defunkt.github.com/hub/
hub_path=$(which hub)
if (( $+commands[hub] ))
then
  alias git=$hub_path
fi

# The rest of my fun git aliases
# alias gl='git pull --prune'
alias glog="git log --graph --pretty=format:'%Cred%h%Creset %an: %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative"
alias gp='git push origin HEAD'

# Remove `+` and `-` from start of diff lines; just rely upon color.
alias gd='git diff --color | sed "s/^\([^-+ ]*\)[-+ ]/\\1/" | less -r'

# alias gc='git commit'
# alias gca='git commit -a'
# alias gco='git checkout'
# alias gcb='git copy-branch-name'
# alias gb='git branch'
alias gs='git status -sb' # upgrade your git if -sb breaks for you. it's fun.
#alias gac='git add -A && git commit -m'

# Docker
alias d='docker $*'
alias dnc='docker-compose $*'

# Hackintosh
alias setw="sudo diskutil mount 'NO NAME' && sudo bless --file /Volumes/NO\ NAME/EFI/Microsoft/Boot/bootmgfw.efi --folder /Volumes/NO\ NAME/EFI/Microsoft/Boot/ --setBoot"

# Stupid things
alias rnd='print -r -- $1[$(( $RANDOM % ${#1[@]} + 1 ))]}'

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
[ -f ~/.zim/modules/interactive-cd/zsh-interactive-cd.plugin.zsh ] && source ~/.zim/modules/interactive-cd/zsh-interactive-cd.plugin.zsh
[ -f ~/.zim/modules/fzf-marks/fzf-marks.plugin.zsh ] && source ~/.zim/modules/fzf-marks/fzf-marks.plugin.zsh

# fzf customizations
# Use ~~ as the trigger sequence instead of the default **
export FZF_COMPLETION_TRIGGER='~~'

# --files: List files that would be searched but do not search
# --no-ignore: Do not respect .gitignore, etc...
# --hidden: Search hidden files and folders
# --follow: Follow symlinks
# --glob: Additional conditions for search (in this case ignore everything in the .git/ folder)
export FZF_DEFAULT_OPTS="--bind='ctrl-o:execute(code {})+abort'"
export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob "!.git/*"'

# To apply the command to CTRL-T as well
export FZF_CTRL_T_OPTS="--preview 'bat --color \"always\" {}' --no-height"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

export FZF_CTRL_R_OPTS="--preview 'echo {}' --preview-window down:3:hidden:wrap --bind '?:toggle-preview'"

# The next line updates PATH for the Google Cloud SDK.
# if [ -f '/Users/robert/playground/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/robert/playground/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
# if [ -f '/Users/robert/playground/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/robert/playground/google-cloud-sdk/completion.zsh.inc'; fi

genpass() {
  pwgen -Bs $1 1 | pbcopy | pbpaste; echo "Has been copied to clipboard"
}

swap()         
{
  local TMPFILE=tmp.$$
  mv "$1" $TMPFILE && mv "$2" "$1" && mv $TMPFILE $2
}

# fortune | ponysay

# Shop env
# source ~/.shopenv
export VAULT_CACERT=~/.consul/consul-ca.pem
export VAULT_ADDR=https://vault.fff-svc.com
export PYENV_ROOT="$HOME/.pyenv"
